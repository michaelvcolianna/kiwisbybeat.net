---
import { getCollection } from 'astro:content'

const posts = await getCollection('posts')
const navigation = posts.filter(post => !post.data.set && post.slug !== 'index').sort((a, b) => {
  if (a.data.series && b.data.series) {
    if (a.data.series < b.data.series) {
      return -1
    }
    else if (a.data.series > b.data.series) {
      return 1
    }
  }

  return 0
})
---

<script>
let navOpen = false
const menuNode = document.querySelector('#menuNode')
const menuButton = document.querySelector('#label-series-nav')
const menuItemsNode = document.querySelector('#menuItemsNode')

const openMenu = () => {
  menuNode?.classList.add('menu-open')
  menuItemsNode?.setAttribute('aria-hidden', 'true')
  navOpen = true
}

const closeMenu = () => {
  menuNode?.classList.remove('menu-open')
  menuItemsNode?.setAttribute('aria-hidden', 'false')
  navOpen = false
}

const toggleMenu = () => navOpen ? closeMenu() : openMenu()

const keyDownHandler = event => (event.key === 'Escape' && navOpen) && closeMenu()

const clickAwayListener = event => !menuNode?.contains(event.target) && closeMenu()

menuButton?.addEventListener('click', toggleMenu)
document.addEventListener('keydown', keyDownHandler)
window.addEventListener('mousedown', clickAwayListener)
</script>

<header class="site-header">
  <a href="/" class="branding">
    Kiwis by Beat!
  </a>

  <nav
    data-todo="Class toggle based on menu open"
    aria-labelledby="label-series-nav"
    class="menu"
    id="menuNode"
  >
    <button
      aria-haspopup="true"
      id="label-series-nav"
      class="toggle-button"
    >
      <span class="sr-only">Comics menu</span>
    </button>

    <div aria-hidden="true" id="menuItemsNode">
      <ul id="menuItemsList">
        {navigation.map(nav => (
          <li>
            <a href={`/${nav.slug}`}>{nav.data.title}</a>
          </li>
        ))}
      </ul>
    </div>
  </nav>
</header>

<style lang="scss">
.site-header {
  align-items: center;
  display: flex;
  gap: 1rem;
  height: 3rem;
  justify-content: space-between;
}

.branding {
  color: var(--color-foreground);
  font-family: var(--font-kiwis);
  font-size: 2rem;
  height: 2rem;
  line-height: 1;
  position: relative;
  text-decoration: none;
  z-index: 2;
}

.toggle-button {
  --horizontal-position: calc(50% - 0.25rem);

  appearance: none;
  background-color: var(--color-background);
  border: 0;
  color: var(--color-foreground);
  display: block;
  height: 3rem;
  padding: 0;
  position: relative;
  width: 3rem;
  z-index: 2;

  &::after,
  &::before {
    background-color: var(--color-foreground);
    content: '';
    height: 2px;
    left: calc(50% - 0.5rem);
    position: absolute;
    width: 1rem;

    @include motion {
      transition: top tx(),
                  transform tx();
    }
  }

  &::after {
    top: var(--horizontal-position);
  }

  &::before {
    bottom: var(--horizontal-position);
  }
}

.menu {
  line-height: 1;
  position: relative;

  div {
    background-color: var(--color-presentational);
    opacity: 0;
    padding: 1rem;
    position: absolute;
    right: 0;
    top: 3rem;
    width: calc(100vw - 4rem);
    z-index: -1;

    @include motion {
      transition: opacity tx();
    }
  }

  ul {
    @include un-ul;
    display: flex;
    flex-flow: row wrap;
    gap: 1rem;
    justify-content: center;
    visibility: hidden;
  }

  a {
    align-items: center;
    color: var(--color-foreground);
    display: flex;
    font-weight: bold;
    height: 2rem;
    justify-content: center;
    padding: 0 1rem;
  }

  &.menu-open {
    .toggle-button {
      background-color: var(--color-presentational);

      &::after,
      &::before {
        top: calc(50% - 1px);
      }

      &::after {
        transform: rotate(45deg);
      }

      &::before {
        transform: rotate(-45deg);
      }
    }

    div {
      opacity: 1;
      z-index: 1;
    }

    ul {
      visibility: visible;
    }
  }
}
</style>
