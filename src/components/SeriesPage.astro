---
import { getCollection } from 'astro:content'

const { post } = Astro.props

const posts = await getCollection('posts')
const sets = posts.filter(set => set.data.series === post.data.series && set.data.set).sort((a, b) => {
  if (a.data.set && b.data.set) {
    if (a.data.set < b.data.set) {
      return -1
    }
    else if (a.data.set > b.data.set) {
      return 1
    }
  }

  return 0
})

const isGroup = post.data.group
const typeText = isGroup ? 'group' : 'comic'
const numPages = sets.length
const pagesText = `page${numPages !== 1 ? 's' : ''}`
---

<article class="series-block">
  <h1>title</h1>

  <div class="series-md">
    <slot />
  </div>

  <div class="series-pages">
    <p>This {typeText} has {numPages} {pagesText}.</p>

    {isGroup
      ? (
        <nav aria-labelledby="label-comics-nav">
          <span class="sr-only" id="label-comics-nav">
            {post.data.title} pages
          </span>

          <ul>
            {sets.map(set => (
              <li><a href={`/${set.slug}`}>{post.data.title} - {set.data.title}</a></li>
            ))}
          </ul>
        </nav>
      )
      : (
        <a href={`/${post.slug}/part-1`} class="read-link">
          Begin Reading

          <svg aria-hidden="true" xmlns="http://www.w3.org/2000/svg" viewBox="0 0 512 512" height="1" width="1"><path fill="currentColor" d="M502.6 278.6c12.5-12.5 12.5-32.8 0-45.3l-128-128c-12.5-12.5-32.8-12.5-45.3 0s-12.5 32.8 0 45.3L402.7 224 32 224c-17.7 0-32 14.3-32 32s14.3 32 32 32l370.7 0-73.4 73.4c-12.5 12.5-12.5 32.8 0 45.3s32.8 12.5 45.3 0l128-128z"/></svg>
        </a>
      )
    }
  </div>
</article>
